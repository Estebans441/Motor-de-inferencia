# Generated from C:/Users/esteb/Documents/Trabajos U/Intro IA/Proyecto2/gen\Sentencia.g4 by ANTLR 4.11.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,96,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,1,0,
        1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,3,3,40,8,3,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,4,1,4,3,4,51,8,4,1,5,1,5,1,5,1,6,1,6,1,6,1,6,
        1,7,1,7,1,7,1,7,1,7,3,7,65,8,7,1,8,1,8,1,8,1,8,1,8,1,8,3,8,73,8,
        8,1,9,1,9,1,9,1,9,3,9,79,8,9,1,10,1,10,1,11,1,11,5,11,85,8,11,10,
        11,12,11,88,9,11,1,12,4,12,91,8,12,11,12,12,12,92,1,12,1,12,0,0,
        13,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,1,0,4,1,0,97,122,1,0,65,90,2,0,65,90,97,122,3,0,9,10,13,13,32,
        32,102,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,1,27,1,0,0,0,3,29,1,0,0,
        0,5,31,1,0,0,0,7,39,1,0,0,0,9,50,1,0,0,0,11,52,1,0,0,0,13,55,1,0,
        0,0,15,64,1,0,0,0,17,72,1,0,0,0,19,78,1,0,0,0,21,80,1,0,0,0,23,82,
        1,0,0,0,25,90,1,0,0,0,27,28,5,40,0,0,28,2,1,0,0,0,29,30,5,41,0,0,
        30,4,1,0,0,0,31,32,5,44,0,0,32,6,1,0,0,0,33,34,5,226,0,0,34,35,5,
        710,0,0,35,40,5,8364,0,0,36,37,5,97,0,0,37,38,5,108,0,0,38,40,5,
        108,0,0,39,33,1,0,0,0,39,36,1,0,0,0,40,8,1,0,0,0,41,42,5,226,0,0,
        42,43,5,710,0,0,43,51,5,402,0,0,44,45,5,101,0,0,45,46,5,120,0,0,
        46,47,5,105,0,0,47,48,5,115,0,0,48,49,5,116,0,0,49,51,5,115,0,0,
        50,41,1,0,0,0,50,44,1,0,0,0,51,10,1,0,0,0,52,53,5,61,0,0,53,54,5,
        62,0,0,54,12,1,0,0,0,55,56,5,60,0,0,56,57,5,61,0,0,57,58,5,62,0,
        0,58,14,1,0,0,0,59,60,5,226,0,0,60,61,5,710,0,0,61,65,5,168,0,0,
        62,63,5,111,0,0,63,65,5,114,0,0,64,59,1,0,0,0,64,62,1,0,0,0,65,16,
        1,0,0,0,66,67,5,226,0,0,67,68,5,710,0,0,68,73,5,167,0,0,69,70,5,
        97,0,0,70,71,5,110,0,0,71,73,5,100,0,0,72,66,1,0,0,0,72,69,1,0,0,
        0,73,18,1,0,0,0,74,79,5,45,0,0,75,76,5,110,0,0,76,77,5,111,0,0,77,
        79,5,116,0,0,78,74,1,0,0,0,78,75,1,0,0,0,79,20,1,0,0,0,80,81,7,0,
        0,0,81,22,1,0,0,0,82,86,7,1,0,0,83,85,7,2,0,0,84,83,1,0,0,0,85,88,
        1,0,0,0,86,84,1,0,0,0,86,87,1,0,0,0,87,24,1,0,0,0,88,86,1,0,0,0,
        89,91,7,3,0,0,90,89,1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,93,1,
        0,0,0,93,94,1,0,0,0,94,95,6,12,0,0,95,26,1,0,0,0,8,0,39,50,64,72,
        78,86,92,1,6,0,0
    ]

class SentenciaLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    ALL = 4
    EXISTS = 5
    IMPLY = 6
    BICOND = 7
    OR = 8
    AND = 9
    NOT = 10
    ID = 11
    PRED = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'('", "')'", "','", "'=>'", "'<=>'" ]

    symbolicNames = [ "<INVALID>",
            "ALL", "EXISTS", "IMPLY", "BICOND", "OR", "AND", "NOT", "ID", 
            "PRED", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "ALL", "EXISTS", "IMPLY", "BICOND", 
                  "OR", "AND", "NOT", "ID", "PRED", "WS" ]

    grammarFileName = "Sentencia.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.11.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


